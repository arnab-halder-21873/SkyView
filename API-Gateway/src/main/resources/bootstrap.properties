spring.application.name=api-gateway

spring.main.web-application-type=reactive
#This is not moved to config-server, as there seems to be issue

spring.cloud.config.discovery.enabled=true
spring.cloud.config.discovery.service-id=CONFIG-SERVER
spring.cloud.config.label=work1
##With these 2 properties we are telling this MS to look for the config server with the service discovery
##lable is used for branch in GIT

#spring.cloud.gateway.discovery.locator.enabled=true
##To automatically fetch the routes, we use above
#spring.cloud.gateway.discovery.locator.lower-case-service-id=true

#spring.cloud.config.uri=http://192.168.0.122:8888
##We can use this to specify the config server if it is not registered with Eureka

management.endpoints.web.exposure.include=refresh
##We used this actuator here to ensure that whatever updated values are there in config repo
##it will refresh in the microservice as well if we hit (MS)ip:port/actuator/refresh from browser
##This will refresh whatever values have changed

spring.sleuth.reactor.instrumentation-type=decorate-on-each
##only for API-gateway, other MS just add the POM dependency
spring.zipkin.base-url=http://localhost:9411


##Hashicorp Vault
this.is.a.very.secure.secret=veryVerySecurePasswordForConfig
this.is.now.stored.in.vault=${thisIsTheVERYSecureSecretName}
#We will use Key:value pair to store SecretName:Secretvalue in Vault

spring.cloud.vault.host=localhost
spring.cloud.vault.port=8111
spring.cloud.vault.scheme=http
spring.cloud.vault.token=hvs.gyEeTh362XyHzynt3RhyqaFf